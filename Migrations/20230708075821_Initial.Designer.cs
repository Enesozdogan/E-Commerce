// <auto-generated />
using E_Commerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230708075821_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Commerce.Models.DeveloperModel", b =>
                {
                    b.Property<int>("DevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DevId"));

                    b.Property<string>("DevName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilePicURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DevId");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("E_Commerce.Models.Devs_Games", b =>
                {
                    b.Property<int>("devId")
                        .HasColumnType("int");

                    b.Property<int>("gameId")
                        .HasColumnType("int");

                    b.HasKey("devId", "gameId");

                    b.HasIndex("gameId");

                    b.ToTable("Devs_Games");
                });

            modelBuilder.Entity("E_Commerce.Models.GameModel", b =>
                {
                    b.Property<int>("gameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gameId"));

                    b.Property<int>("gameCategory")
                        .HasColumnType("int");

                    b.Property<string>("gameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("platformId")
                        .HasColumnType("int");

                    b.Property<string>("profilePicURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("releaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("gameId");

                    b.HasIndex("platformId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("E_Commerce.Models.PlatformModel", b =>
                {
                    b.Property<int>("platformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("platformId"));

                    b.Property<string>("logoImgURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("platformName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("platformId");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("E_Commerce.Models.Devs_Games", b =>
                {
                    b.HasOne("E_Commerce.Models.DeveloperModel", "dev")
                        .WithMany("devs_games")
                        .HasForeignKey("devId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.Models.GameModel", "game")
                        .WithMany("devs_games")
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dev");

                    b.Navigation("game");
                });

            modelBuilder.Entity("E_Commerce.Models.GameModel", b =>
                {
                    b.HasOne("E_Commerce.Models.PlatformModel", "platform")
                        .WithMany("games")
                        .HasForeignKey("platformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("platform");
                });

            modelBuilder.Entity("E_Commerce.Models.DeveloperModel", b =>
                {
                    b.Navigation("devs_games");
                });

            modelBuilder.Entity("E_Commerce.Models.GameModel", b =>
                {
                    b.Navigation("devs_games");
                });

            modelBuilder.Entity("E_Commerce.Models.PlatformModel", b =>
                {
                    b.Navigation("games");
                });
#pragma warning restore 612, 618
        }
    }
}
